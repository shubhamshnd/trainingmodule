# Generated by Django 5.0.1 on 2024-05-09 05:03

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('useri', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=20, unique=True)),
                ('employee_id', models.CharField(max_length=20)),
                ('employee_name', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=10)),
                ('marital_status', models.CharField(blank=True, max_length=20)),
                ('weight', models.FloatField(default=0)),
                ('height', models.FloatField(default=0)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('grade', models.CharField(blank=True, max_length=20)),
                ('work_order_no', models.CharField(blank=True, max_length=20)),
                ('work_order_expiry_date', models.DateField(blank=True, null=True)),
                ('item_code', models.CharField(blank=True, max_length=20)),
                ('contractor_name', models.CharField(blank=True, max_length=100)),
                ('sub_contractor_name', models.CharField(blank=True, max_length=100)),
                ('under_sub_contractor_name', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('pf_code', models.CharField(blank=True, max_length=20)),
                ('uan_no_pf', models.CharField(blank=True, max_length=20)),
                ('pf_no', models.CharField(blank=True, max_length=20)),
                ('pan_no', models.CharField(blank=True, max_length=20)),
                ('lic_policy_no', models.CharField(blank=True, max_length=20)),
                ('shift_group', models.CharField(blank=True, max_length=20)),
                ('section', models.CharField(blank=True, max_length=20)),
                ('identification_mark_1', models.CharField(blank=True, max_length=100)),
                ('identification_mark_2', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('contact_no', models.CharField(blank=True, max_length=20)),
                ('emergency_contact_person', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_no', models.CharField(blank=True, max_length=20)),
                ('card_active_status', models.CharField(blank=True, max_length=20)),
                ('date_of_leaving', models.DateField(blank=True, null=True)),
                ('card_validity', models.DateField(blank=True, null=True)),
                ('card_status', models.CharField(blank=True, max_length=20)),
                ('esi_no', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('pin_code', models.CharField(blank=True, max_length=10)),
                ('taluka', models.CharField(blank=True, max_length=50)),
                ('district', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('per_address', models.TextField(blank=True)),
                ('per_pin_code', models.CharField(blank=True, max_length=10)),
                ('per_taluka', models.CharField(blank=True, max_length=50)),
                ('per_district', models.CharField(blank=True, max_length=50)),
                ('per_state', models.CharField(blank=True, max_length=50)),
                ('poi', models.CharField(blank=True, max_length=50)),
                ('poino', models.CharField(blank=True, max_length=50)),
                ('poa', models.CharField(blank=True, max_length=50)),
                ('poano', models.CharField(blank=True, max_length=50)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('branch_name', models.CharField(blank=True, max_length=100)),
                ('account_number', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='useri.role')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
